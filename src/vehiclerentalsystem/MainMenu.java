/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vehiclerentalsystem;

import java.awt.Image;
import java.sql.Connection;
//import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import java.util.Locale;
import java.text.ParseException;
/**
 *
 * @author theam
 */
public class MainMenu extends javax.swing.JFrame {

    public static String Loggeduser=null;
    
    
    private String[] imagesLab={"panigale.jpg","apriliarsv.jpg","mclaren720s.jpg","aventadosvj.jpg"};
    /**
     * 
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        SetStateToBook();
       // JOptionPane.showMessageDialog(null,"CurrentLogin "+Loggeduser);
        printDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        options = new javax.swing.JPanel();
        browseFleetLabel1 = new javax.swing.JLabel();
        manageAccountLabel = new javax.swing.JLabel();
        browseFleetLabel = new javax.swing.JLabel();
        rentLabel = new javax.swing.JLabel();
        layerdPane = new javax.swing.JLayeredPane();
        yourBookingsTab = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        browseFleetTab = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox<>();
        vehNameLab = new javax.swing.JLabel();
        vehTypeLab = new javax.swing.JLabel();
        vehLocsLab = new javax.swing.JLabel();
        vehCostLab = new javax.swing.JLabel();
        checkButton = new javax.swing.JButton();
        bookavehicleTab = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        durationSlider = new javax.swing.JSlider();
        jLabel20 = new javax.swing.JLabel();
        startTimeSlider = new javax.swing.JSlider();
        jSeparator10 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        vehSelect = new javax.swing.JComboBox<>();
        jSeparator12 = new javax.swing.JSeparator();
        ddc = new javax.swing.JComboBox<>();
        mmc = new javax.swing.JComboBox<>();
        yyyyc = new javax.swing.JComboBox<>();
        locc = new javax.swing.JComboBox<>();
        manageAccountTab = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        emailTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addressTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        phoneTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        currentNameLab = new javax.swing.JLabel();
        currentMailLab = new javax.swing.JLabel();
        currentAddressLab = new javax.swing.JLabel();
        currentphone = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        nutTF = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        menubar1 = new javax.swing.JMenuBar();
        settingsOP = new javax.swing.JMenu();
        op1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(800, 480));

        options.setBackground(new java.awt.Color(102, 102, 255));

        browseFleetLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        browseFleetLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehiclerentalsystem/historyIcon1.png"))); // NOI18N
        browseFleetLabel1.setText(" Your bookings");
        browseFleetLabel1.setToolTipText("");
        browseFleetLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        browseFleetLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        browseFleetLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        browseFleetLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                browseFleetLabel1MouseClicked(evt);
            }
        });

        manageAccountLabel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        manageAccountLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehiclerentalsystem/settings2icon.png"))); // NOI18N
        manageAccountLabel.setText("Manage Account");
        manageAccountLabel.setToolTipText("");
        manageAccountLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        manageAccountLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        manageAccountLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        manageAccountLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manageAccountLabelMouseClicked(evt);
            }
        });

        browseFleetLabel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        browseFleetLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehiclerentalsystem/bikeIcon2.png"))); // NOI18N
        browseFleetLabel.setText("   Browse Fleet");
        browseFleetLabel.setToolTipText("");
        browseFleetLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        browseFleetLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        browseFleetLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        browseFleetLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                browseFleetLabelMouseClicked(evt);
            }
        });

        rentLabel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        rentLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehiclerentalsystem/rightarrow1icon.png"))); // NOI18N
        rentLabel.setText(" Book a vehicle");
        rentLabel.setToolTipText("");
        rentLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        rentLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rentLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rentLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rentLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout optionsLayout = new javax.swing.GroupLayout(options);
        options.setLayout(optionsLayout);
        optionsLayout.setHorizontalGroup(
            optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(manageAccountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(browseFleetLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(browseFleetLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        optionsLayout.setVerticalGroup(
            optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsLayout.createSequentialGroup()
                .addComponent(rentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(browseFleetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(browseFleetLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(manageAccountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layerdPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        yourBookingsTab.setBackground(new java.awt.Color(204, 204, 204));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Your bookings");

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Vehicle ", "Start date", "Start time", "End Date", "End Time", "Total Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(historyTable);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 255));
        jSeparator2.setToolTipText("");

        jButton4.setText("Check");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout yourBookingsTabLayout = new javax.swing.GroupLayout(yourBookingsTab);
        yourBookingsTab.setLayout(yourBookingsTabLayout);
        yourBookingsTabLayout.setHorizontalGroup(
            yourBookingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yourBookingsTabLayout.createSequentialGroup()
                .addGroup(yourBookingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2))
                .addGap(0, 97, Short.MAX_VALUE))
            .addGroup(yourBookingsTabLayout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        yourBookingsTabLayout.setVerticalGroup(
            yourBookingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yourBookingsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(265, Short.MAX_VALUE))
        );

        layerdPane.add(yourBookingsTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 450));

        browseFleetTab.setBackground(new java.awt.Color(204, 204, 204));
        browseFleetTab.setToolTipText("");

        imageLabel.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("BrowseFleet");

        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Panigale999", "RSV4RF", "720s", "AventadorSVJ" }));
        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        vehNameLab.setText("Name :");
        vehNameLab.setToolTipText("");

        vehTypeLab.setText("Type : ");

        vehLocsLab.setText("available at loaction(s) :");

        vehCostLab.setText("Cost per hour : ");
        vehCostLab.setToolTipText("");

        checkButton.setText("Check");
        checkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout browseFleetTabLayout = new javax.swing.GroupLayout(browseFleetTab);
        browseFleetTab.setLayout(browseFleetTabLayout);
        browseFleetTabLayout.setHorizontalGroup(
            browseFleetTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, browseFleetTabLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(browseFleetTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkButton)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(browseFleetTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, browseFleetTabLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(159, 159, 159))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, browseFleetTabLayout.createSequentialGroup()
                            .addGroup(browseFleetTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(vehTypeLab)
                                .addComponent(vehNameLab)
                                .addComponent(vehCostLab)
                                .addComponent(vehLocsLab))
                            .addGap(176, 176, 176)))))
        );
        browseFleetTabLayout.setVerticalGroup(
            browseFleetTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(browseFleetTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(45, 45, 45)
                .addGroup(browseFleetTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(browseFleetTabLayout.createSequentialGroup()
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(checkButton)
                        .addGap(41, 41, 41)
                        .addComponent(vehNameLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vehTypeLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vehLocsLab)
                        .addGap(18, 18, 18)
                        .addComponent(vehCostLab))
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(127, Short.MAX_VALUE))
        );

        layerdPane.add(browseFleetTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 450));

        bookavehicleTab.setBackground(new java.awt.Color(204, 204, 204));
        bookavehicleTab.setToolTipText("");

        jLabel10.setText("book a vehicle");

        jLabel3.setText("Select your preferred date and time for renting");

        jLabel11.setText("Date");

        jLabel12.setText("Day");

        jLabel13.setText("Month");

        jLabel14.setText("YYYY");

        jSeparator5.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 255));

        jLabel15.setText("Start time from day of delivery ");

        jSeparator6.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator6.setForeground(new java.awt.Color(0, 0, 255));

        jSeparator7.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator7.setForeground(new java.awt.Color(0, 0, 255));
        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator8.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator8.setForeground(new java.awt.Color(0, 0, 255));

        durationSlider.setMajorTickSpacing(5);
        durationSlider.setMaximum(25);
        durationSlider.setMinimum(5);
        durationSlider.setMinorTickSpacing(1);
        durationSlider.setPaintLabels(true);
        durationSlider.setPaintTicks(true);
        durationSlider.setSnapToTicks(true);
        durationSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel20.setText("Duration (Hours)");

        startTimeSlider.setMajorTickSpacing(1);
        startTimeSlider.setMaximum(23);
        startTimeSlider.setPaintLabels(true);
        startTimeSlider.setPaintTicks(true);
        startTimeSlider.setSnapToTicks(true);
        startTimeSlider.setToolTipText("");
        startTimeSlider.setValue(0);
        startTimeSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jSeparator10.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator10.setForeground(new java.awt.Color(0, 0, 255));
        jSeparator10.setToolTipText("");

        jLabel21.setText("Pickup location");

        jSeparator11.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator11.setForeground(new java.awt.Color(0, 0, 255));
        jSeparator11.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton3.setText("Book ");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        vehSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Panigale999", "RSV4RF", "720s", "AventadorSVJ" }));

        jSeparator12.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator12.setForeground(new java.awt.Color(0, 0, 255));

        ddc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        mmc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " " }));

        yyyyc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022" }));

        locc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "area1", "area2" }));

        javax.swing.GroupLayout bookavehicleTabLayout = new javax.swing.GroupLayout(bookavehicleTab);
        bookavehicleTab.setLayout(bookavehicleTabLayout);
        bookavehicleTabLayout.setHorizontalGroup(
            bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookavehicleTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookavehicleTabLayout.createSequentialGroup()
                        .addComponent(jSeparator10)
                        .addContainerGap())
                    .addGroup(bookavehicleTabLayout.createSequentialGroup()
                        .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel10)
                                .addComponent(jLabel15)
                                .addComponent(startTimeSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                                .addComponent(jSeparator5)
                                .addComponent(jSeparator6))
                            .addComponent(jLabel3)
                            .addGroup(bookavehicleTabLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ddc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGap(47, 94, Short.MAX_VALUE)
                                .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mmc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addGap(100, 100, 100)
                                .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yyyyc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))))
                        .addGap(42, 42, 42)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookavehicleTabLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bookavehicleTabLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addContainerGap())
                            .addGroup(bookavehicleTabLayout.createSequentialGroup()
                                .addComponent(durationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(bookavehicleTabLayout.createSequentialGroup()
                        .addComponent(vehSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(locc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(187, 187, 187))))
            .addGroup(bookavehicleTabLayout.createSequentialGroup()
                .addComponent(jSeparator12)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookavehicleTabLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(270, 270, 270))
        );
        bookavehicleTabLayout.setVerticalGroup(
            bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookavehicleTabLayout.createSequentialGroup()
                .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bookavehicleTabLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jSeparator7))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bookavehicleTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bookavehicleTabLayout.createSequentialGroup()
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(durationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5))
                            .addGroup(bookavehicleTabLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(2, 2, 2)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ddc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mmc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yyyyc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(startTimeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookavehicleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bookavehicleTabLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(locc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(vehSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(47, 47, 47))
        );

        layerdPane.add(bookavehicleTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 450));

        manageAccountTab.setBackground(new java.awt.Color(204, 204, 204));
        manageAccountTab.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("You can edit your details here");
        jLabel1.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("email id");
        jLabel4.setToolTipText("");

        emailTF.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("address ");
        jLabel5.setToolTipText("");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Phone number");
        jLabel6.setToolTipText("");

        phoneTF.setToolTipText("");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehiclerentalsystem/settingsicon.png"))); // NOI18N
        jButton1.setText("Submit");
        jButton1.setToolTipText("");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 255));
        jSeparator1.setToolTipText("");

        jLabel7.setText("your current details");
        jLabel7.setToolTipText("");

        currentNameLab.setText("Name :");

        currentMailLab.setText("Email :");

        currentAddressLab.setText("Address :");

        currentphone.setText("Phone number :");

        jSeparator3.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 255));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setToolTipText("");

        jLabel2.setText("new user name");

        nutTF.setToolTipText("");
        nutTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nutTFActionPerformed(evt);
            }
        });

        jButton2.setText("SUBMIT");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageAccountTabLayout = new javax.swing.GroupLayout(manageAccountTab);
        manageAccountTab.setLayout(manageAccountTabLayout);
        manageAccountTabLayout.setHorizontalGroup(
            manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(manageAccountTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(manageAccountTabLayout.createSequentialGroup()
                        .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageAccountTabLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(manageAccountTabLayout.createSequentialGroup()
                                .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(currentMailLab)
                                    .addComponent(currentAddressLab)
                                    .addComponent(currentphone)
                                    .addComponent(currentNameLab))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 285, Short.MAX_VALUE)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(nutTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(108, 108, 108)))
                        .addContainerGap())
                    .addGroup(manageAccountTabLayout.createSequentialGroup()
                        .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addressTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                            .addComponent(emailTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneTF))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(manageAccountTabLayout.createSequentialGroup()
                .addGap(302, 302, 302)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        manageAccountTabLayout.setVerticalGroup(
            manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageAccountTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageAccountTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4))
                    .addGroup(manageAccountTabLayout.createSequentialGroup()
                        .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageAccountTabLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(currentNameLab)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentMailLab)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentAddressLab)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentphone))
                            .addGroup(manageAccountTabLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(manageAccountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(nutTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(0, 83, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layerdPane.add(manageAccountTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 454));

        menubar1.setBackground(new java.awt.Color(0, 0, 255));
        menubar1.setBorder(null);

        settingsOP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehiclerentalsystem/downarrow.png"))); // NOI18N
        settingsOP.setToolTipText("");
        settingsOP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        op1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehiclerentalsystem/logouticon.png"))); // NOI18N
        op1.setText("logout");
        op1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        op1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                op1MouseClicked(evt);
            }
        });
        op1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op1ActionPerformed(evt);
            }
        });
        settingsOP.add(op1);

        menubar1.add(settingsOP);

        setJMenuBar(menubar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layerdPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(layerdPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        setSize(new java.awt.Dimension(800, 480));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void op1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op1ActionPerformed
        // TODO add your handling code here:
        MainMenu.Loggeduser=null;
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_op1ActionPerformed

    private void op1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_op1MouseClicked
        
        
    }//GEN-LAST:event_op1MouseClicked

    private void rentLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rentLabelMouseClicked
        // TODO add your handling code here:
        SetStateToBook();
    }//GEN-LAST:event_rentLabelMouseClicked

    private void browseFleetLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseFleetLabelMouseClicked
        // TODO add your handling code here:
        SetStateToBrowse();
    }//GEN-LAST:event_browseFleetLabelMouseClicked
    private int returnLoggedUID(){
        
        int uid=0;
         try{
            Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                
                String sql="select * from user where username='"+Loggeduser+"'";
                
                ResultSet rs=stmt.executeQuery(sql);
                
                if(rs.next()){
                    uid=Integer.parseInt(rs.getString(1));
                }
                
         }catch(Exception e){
             
         }
        return uid;
    }
    private void browseFleetLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseFleetLabel1MouseClicked
        // TODO add your handling code here:
           SetStateToHistory();
               DefaultTableModel tbl=(DefaultTableModel)historyTable.getModel();
            tbl.setRowCount(0);
            String[] RI=new String[7];
        
        int currUID=0;
        //auto print details
        try{
            Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                Statement stmt1=con.createStatement();
                String sql="select userid from user where username='"+Loggeduser+"'";
                String sql1="select * from bookings ";
             //   JOptionPane.showMessageDialog(null,"CC");
                ResultSet rs1=stmt.executeQuery(sql);
             //   JOptionPane.showMessageDialog(null,"E1");
                
                if(rs1.next()){
                   // JOptionPane.showMessageDialog(null,"Q1PRES");
                    
                    currUID=Integer.parseInt(rs1.getString(1).trim());
                  //  JOptionPane.showMessageDialog(null,"currUID "+currUID);
                    
                    
                    ResultSet rsT=stmt1.executeQuery(sql1);
                   // JOptionPane.showMessageDialog(null,"E2");
                    
                    while(rsT.next()){
                       // JOptionPane.showMessageDialog(null,"Q2PRES");
                        String f1=rsT.getString(1);
                        String f2=rsT.getString(3);
                        String f3=rsT.getString(4);
                        String f4=rsT.getString(5);
                        String f5=rsT.getString(6);
                        String f6=rsT.getString(7);
                        String f7=rsT.getString(8);
                        String f8=rsT.getString(9);
                        int RetID=Integer.parseInt(rsT.getString(2));
                        if(RetID!=currUID){
                            
                        }
                        else{
                                     RI[0]=f1;
                      //  JOptionPane.showMessageDialog(null,"df: "+RI[0]);
                        RI[1]=f2;
                       // JOptionPane.showMessageDialog(null,"df: "+RI[1]);
                        RI[2]=f3;
                       // JOptionPane.showMessageDialog(null,"df: "+RI[2]);
                        RI[3]=f4;
                       // JOptionPane.showMessageDialog(null,"df: "+RI[3]);
                        RI[4]=f5;
                      //  JOptionPane.showMessageDialog(null,"df: "+RI[4]);
                        RI[5]=f6;
                       // JOptionPane.showMessageDialog(null,"df: "+RI[5]);
                        RI[6]=f8;
                        
                       // RI[7]=f8;
                        tbl.addRow(RI);
                       // JOptionPane.showMessageDialog(null,"Row added");
                        }
                        
                        
               
                        
                    }
                            
                            
                }else{
                    JOptionPane.showMessageDialog(null,"Error");
                }
                
                
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_browseFleetLabel1MouseClicked

    private void manageAccountLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageAccountLabelMouseClicked
        // TODO add your handling code here:
        SetStateToManage();
    }//GEN-LAST:event_manageAccountLabelMouseClicked
    private void printDetails(){
        String username=Loggeduser;
        
        String realname=null;
        String mailid=null;
        String address=null;
        String phn=null;
        
      //  int thisuserid=getLoggedID(Loggeduser);
    //    if(thisuserid<=0){
    //        JOptionPane.showMessageDialog(null,"Error with login sync");
   //     }
    //    else{
             try{
            Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                String sql="select * from customer where customername='"+Loggeduser+"'";
                ResultSet rs=stmt.executeQuery(sql);
                
                if(rs.next()){
                    realname=rs.getString(2);
                    mailid=rs.getString(3);
                    address=rs.getString(4);
                    phn=rs.getString(5);
                }
                else{
                  //  JOptionPane.showMessageDialog(null,"Error with login sync, no such customer found");
                }
                
        }catch(Exception ex){
            
  //  }
    }    
       currentNameLab.setText("Name: "+realname);
       currentMailLab.setText("Email ID: "+mailid);
       currentAddressLab.setText("Address: "+address);
       currentphone.setText("Phone: "+phn);
    }
        
       
    
    
    private int getLoggedID(String username){
        try{
            Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                String sql="select userid from user where username='"+username+"'";
                ResultSet rs=stmt.executeQuery(sql);
                if(rs.next()){
                    return(Integer.parseInt(rs.getString(1)));
                }
                else{
                    return(0);
                }
        }catch(Exception ex){
            return(0);
        }
       // return 0;
    }
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
      //  String uname=newuserNameTF.getText().trim();
      
      //  String realname=realNameTF.getText().trim();
        String mail=emailTF.getText().trim();
        String addr=addressTF.getText().trim();
        String phone=phoneTF.getText().trim();
        
     //   String oldname=Loggeduser;
     //   String oldrealname;
      //  String oldmail;
      //  String oldaddr;
      //  String oldphone;
      
        
        
        
       // int thisID=getLoggedID(Loggeduser);
        
       
        
             try{
           Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                Statement stmt1=con.createStatement();
                
                Statement stmt2=con.createStatement();
              
                
                
                String insertQ="insert into customer(customername,customeremail,customeraddress,customerphone) values('"+Loggeduser+"','"+mail+"','"+addr+"','"+phone+"')";
                
                String checkQuerry="select * from customer where customername='"+Loggeduser+"'";
                
                String querry1="update customer set customername='"+Loggeduser+"',customeremail='"+mail+"',customeraddress='"+addr+"',customerphone='"+phone+"' where customername='"+Loggeduser+"' ";
                
                ResultSet rsc=stmt1.executeQuery(checkQuerry);
                if(rsc.next()){
                    
                     stmt.executeUpdate(querry1);
                     JOptionPane.showMessageDialog(null,"Details Updated");
                }
                else{
                   
                    stmt2.executeUpdate(insertQ);
                    JOptionPane.showMessageDialog(null,"Details added");
                }
                
                
               
                
      }catch(Exception ex){
          
      }
              printDetails();   
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    String newName=nutTF.getText().trim();
    
    int thisID=getLoggedID(Loggeduser);
    //JOptionPane.showMessageDialog(null,"this id is "+thisID);
    
    
    
    try{
        Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                  
                  Statement updateMain=con.createStatement();
                  Statement stmt=con.createStatement();
                  
                  String mainUpd="update user set username='"+newName+"' where userid='"+thisID+"' ";
                  String sql="update customer set customername='"+newName+"' where customername='"+Loggeduser+"' ";
                  
                  // 
                    updateMain.executeUpdate(mainUpd);
                    stmt.executeUpdate(sql);
                    MainMenu.Loggeduser=newName;
                    JOptionPane.showMessageDialog(null,"Done");
        
        
    }catch(Exception ex){
        
    }
        printDetails();
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void nutTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nutTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nutTFActionPerformed

    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
        // TODO add your handling code here:
        
        // combobox changed
       
        
    }//GEN-LAST:event_comboBoxActionPerformed

    private void checkButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkButtonMouseClicked
        // TODO add your handling code here:
       // JOptionPane.showMessageDialog(null,"clicked button");
         String currentSelection = comboBox.getSelectedItem().toString().trim();
        // JOptionPane.showMessageDialog(null,"current Selection "+currentSelection);
        try{
             Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
               //  JOptionPane.showMessageDialog(null,"con setup");
                
                Statement stmt=con.createStatement();
              //   JOptionPane.showMessageDialog(null,"stmt setup");
                 
                String sql="select * from vehicle where vehmodel='"+currentSelection+"'";
              //   JOptionPane.showMessageDialog(null,"string setup");
                 
                ResultSet rs=stmt.executeQuery(sql);
              //   JOptionPane.showMessageDialog(null,"querry executed");
                if(rs.next()){
                    
                 //   JOptionPane.showMessageDialog(null,"successful execution, result returned");
                    
                    String vtype=rs.getString(2);
               //     JOptionPane.showMessageDialog(null,"string assigned vtype "+vtype);
                    String vname=rs.getString(3)+" "+rs.getString(4);
                //    JOptionPane.showMessageDialog(null,"string assigned vname "+vname);
                    String locations=rs.getString(5)+" and "+rs.getString(6);
               //     JOptionPane.showMessageDialog(null,"string assigned locations "+locations);
                    String costph=rs.getString(7);
               //     JOptionPane.showMessageDialog(null,"string assigned cost "+costph);
                   byte[] imagebytes = rs.getBytes(8);
                   Image image=getToolkit().createImage(imagebytes);
                    Image img = image.getScaledInstance(250,250,Image.SCALE_SMOOTH);
                    ImageIcon icon=new ImageIcon(img);
                    imageLabel.setIcon(icon);
                    
                    vehNameLab.setText("Name: "+vname);
               //     JOptionPane.showMessageDialog(null,"set text 1");
                    vehTypeLab.setText("Type: "+vtype);
               //     JOptionPane.showMessageDialog(null,"set text 1");
                    vehLocsLab.setText("Locations: "+locations);
                //    JOptionPane.showMessageDialog(null,"set text 1");
                    vehCostLab.setText("Cost per hour: "+costph);
              //      JOptionPane.showMessageDialog(null,"set text 1");
              
                 //   int selectedIndex=Integer.parseInt(rs.getString(1));
                   // JOptionPane.showMessageDialog(null,"current index "+selectedIndex);
                  //  String currentImg = imagesLab[selectedIndex-1];
                    
                  //  imageLabel.setIcon(new ImageIcon("src\\vehiclerentalsystem\\"+currentImg));
                
              
             
             // imageLabel.setIcon(icon);
                    
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error, no such vehicle found");
                }
                
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_checkButtonMouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
            DefaultTableModel tbl=(DefaultTableModel)historyTable.getModel();
            tbl.setRowCount(0);
            String[] RI=new String[7];
        
        int currUID=0;
        //auto print details
        try{
            Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                Statement stmt1=con.createStatement();
                String sql="select userid from user where username='"+Loggeduser+"'";
                String sql1="select * from bookings ";
               // JOptionPane.showMessageDialog(null,"CC");
                ResultSet rs1=stmt.executeQuery(sql);
              //  JOptionPane.showMessageDialog(null,"E1");
                
                if(rs1.next()){
                  //  JOptionPane.showMessageDialog(null,"Q1PRES");
                    
                    currUID=Integer.parseInt(rs1.getString(1).trim());
                   // JOptionPane.showMessageDialog(null,"currUID "+currUID);
                    
                    
                    ResultSet rsT=stmt1.executeQuery(sql1);
                   // JOptionPane.showMessageDialog(null,"E2");
                    
                    while(rsT.next()){
                       // JOptionPane.showMessageDialog(null,"Q2PRES");
                        String f1=rsT.getString(1);
                        String f2=rsT.getString(3);
                        String f3=rsT.getString(4);
                        String f4=rsT.getString(5);
                        String f5=rsT.getString(6);
                        String f6=rsT.getString(7);
                        String f8=rsT.getString(9);
                        int RetID=Integer.parseInt(rsT.getString(2));
                        if(RetID!=currUID){
                            
                        }
                        else{
                                     RI[0]=f1;
                      //  JOptionPane.showMessageDialog(null,"df: "+RI[0]);
                        RI[1]=f2;
                     //   JOptionPane.showMessageDialog(null,"df: "+RI[1]);
                        RI[2]=f3;
                     //   JOptionPane.showMessageDialog(null,"df: "+RI[2]);
                        RI[3]=f4;
                      //  JOptionPane.showMessageDialog(null,"df: "+RI[3]);
                        RI[4]=f5;
                      //  JOptionPane.showMessageDialog(null,"df: "+RI[4]);
                        RI[5]=f6;
                     //   JOptionPane.showMessageDialog(null,"df: "+RI[5]);
                        RI[6]=f8;
                        tbl.addRow(RI);
                       // JOptionPane.showMessageDialog(null,"Row added");
                        }
                        
                        
               
                        
                    }
                            
                            
                }else{
                    JOptionPane.showMessageDialog(null,"Error");
                }
                
                
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        int loopCounter=0;
        //get selected options
        int sdd=Integer.parseInt(ddc.getSelectedItem().toString().trim());
        int smm=Integer.parseInt(mmc.getSelectedItem().toString().trim());
        int syyyy=Integer.parseInt(yyyyc.getSelectedItem().toString().trim());
        
        if(sdd>28&&(smm==2)){
            JOptionPane.showMessageDialog(null, "Noob 1 "+sdd+" "+smm);
            return;
        }
        if(sdd>30&&((smm==2)||(smm==4)||(smm==6)||(smm==9)||(smm==11))){
            JOptionPane.showMessageDialog(null, "Noob 2 " +sdd+" "+smm);
            return;
        }
        if(sdd>31&&((smm==1)||(smm==3)||(smm==5)||(smm==7)||(smm==8)||(smm==10)||(smm==12))){
            JOptionPane.showMessageDialog(null, "Noob 3 "+sdd+" "+smm);
            return;
        }
        
        
       
        String vehModel=vehSelect.getSelectedItem().toString().trim();
        
        int startTime = startTimeSlider.getValue();
        
        String tempTime=""+startTime;
        
        
        
        int duration = durationSlider.getValue();
        
        String dformat="yyyy-MM-dd";
        String Tformat="HH";
        SimpleDateFormat cDateF = new SimpleDateFormat(dformat);
        String currDate = cDateF.format(new Date());
        SimpleDateFormat cTimeF = new SimpleDateFormat(Tformat);
        String currTime = cTimeF.format(new Date());
        
        
        
        String StartDate;
        if(sdd<10){
            if(smm<10){
                StartDate=syyyy+"-0"+smm+"-0"+sdd; 
            }else{
                StartDate=syyyy+"-"+smm+"-0"+sdd;  
            }
            
        }else{
            if(smm<10){
                StartDate=syyyy+"-0"+smm+"-"+sdd; 
            }else{
                StartDate=syyyy+"-"+smm+"-"+sdd; 
            }
            
        }
        
        String[] EndRes=new String[2];
        EndRes=CalcEndDateAndTime(sdd,smm,syyyy,startTime,duration);
        
        String EndDate=EndRes[0];
        String EndTime=EndRes[1];
        
     //   JOptionPane.showMessageDialog(null,"End Date : "+EndDate);
     //   JOptionPane.showMessageDialog(null,"End time : "+EndTime);
     
       String[] modelIDs=null;
       modelIDs=getVIDforModel(vehModel);
       
   //    for(String a:modelIDs){
   //        JOptionPane.showMessageDialog(null,"Veh Ids : "+a);
   //    }
        int userId=returnLoggedUID();
        
        
        if(StartDate.compareTo(currDate)<0){
            //date has already passed, good luck building a time machine
            JOptionPane.showMessageDialog(null,"date has already passed, good luck building a time machine "+StartDate+" vs current "+currDate);
        }else{
            if((tempTime.compareTo(currTime)<0)&&StartDate.compareTo(currDate)==0){
                //too slow boi, work on that time machine
                JOptionPane.showMessageDialog(null,"too slow boi, work on that time machine ");
            }
            else{
                //you're in luck nigga
              //  JOptionPane.showMessageDialog(null,"Nigga you're in luck");
                
                boolean canRent=false;
                boolean[] canRentVeh=new boolean[modelIDs.length];
                
                for(int i=0;i<canRentVeh.length;i++){
                    canRentVeh[i]=false;
                }
                
                try{
                   // JOptionPane.showMessageDialog(null," In try");
                    Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                
                
                
                
                int x=0;
                for(String currVid:modelIDs){
                   // JOptionPane.showMessageDialog(null," In for loop");
                    if(checkAV(currVid,StartDate,EndDate,startTime,Integer.parseInt(EndTime))){
                       // JOptionPane.showMessageDialog(null,"can rent vehicle at pos "+x);
                        canRentVeh[x]=true;
                    }else{
                        canRentVeh[x]=false;
                       // JOptionPane.showMessageDialog(null,"can't rent vehicle at pos "+x);
                    }
                    
                   
                    
                }
              //  JOptionPane.showMessageDialog(null,"Out of For");
                for(boolean b:canRentVeh){
                    
                    if(b==true){
                    canRent=true;
                    }
                }
              //  JOptionPane.showMessageDialog(null,"Out of For boolean, res: "+canRent);
                
                int cris=0;
                int cc=0;
                for(int c=0;c<canRentVeh.length;c++){
                    if(canRentVeh[c]==true){
                        canRent=true;
                        cris=c;
                        break;
                    }
                }
               // JOptionPane.showMessageDialog(null,"Out of For index search");
                if(canRent){
                    
                    int VehID=Integer.parseInt(modelIDs[cris]);
                    
                    int costph=getCPCofrVID(VehID);
                   // JOptionPane.showMessageDialog(null," cost per hour is "+costph);
                    int totcost=costph*duration;
                    
                  //  JOptionPane.showMessageDialog(null,"can rent and your vehicle ID is: "+VehID);
                    String isql="insert into bookings(customerid,vehid,startdate,starttime,enddate,endtime,duration,cost) values('"+userId+"','"+VehID+"','"+StartDate+"','"+startTime+"','"+EndDate+"','"+EndTime+"','"+duration+"','"+totcost+"')";
                    
                    stmt.executeUpdate(isql);
                    JOptionPane.showMessageDialog(null,"Order placed");
                    
                    //Insert into table bookings
                }else{
                    JOptionPane.showMessageDialog(null,"That vehicle model isn't available at the selected date and time");
                }
                
                
                }catch(Exception e){
                    
                }
                
                
            }
        }
        
        
    }//GEN-LAST:event_jButton3MouseClicked
    private int getCPCofrVID(int vid){
        int costph=0;
        try{
            
             Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                String sql="select costperhour from vehicle where vehid='"+vid+"'";
                ResultSet rs=stmt.executeQuery(sql);
                if(rs.next()){
                    costph=rs.getInt(1);
                }
                
        }catch(Exception e){
            
        }
        return(costph);
    }
    
    private boolean checkAV(String VehID,String sDate,String eDate,int sTime,int eTime){
        
        boolean canRentThis=false;
        try{ 
            Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                    Statement stmt=con.createStatement();
                    String sql="select * from bookings where startdate between '"+sDate+"' and '"+eDate+"' or enddate between '"+sDate+"' and '"+eDate+"'";
                    ResultSet rs=stmt.executeQuery(sql);
                   // JOptionPane.showMessageDialog(null,"Executed query for VID "+VehID);
                    if(rs.next()){
                        
                        //JOptionPane.showMessageDialog(null,"rs returns:");
                        
                        rs.beforeFirst();
                        // JOptionPane.showMessageDialog(null," before While:");
                        while(rs.next()){
                           // JOptionPane.showMessageDialog(null," In While:");
                            String qVID=rs.getString(3);
                            //JOptionPane.showMessageDialog(null," qVID: "+qVID);
                            String qsdate=rs.getString(4);
                            //JOptionPane.showMessageDialog(null," qsdate: "+qsdate);
                            int qstime=Integer.parseInt(rs.getString(5));
                            //JOptionPane.showMessageDialog(null," qstime: "+qstime);
                            String qedate=rs.getString(6);
                           // JOptionPane.showMessageDialog(null," qedate: "+qedate);
                            int qetime=Integer.parseInt(rs.getString(7));
                           // JOptionPane.showMessageDialog(null," qetime: "+qetime);
                            
                            
                            
                            
                        
                        
                        
                        String eVID=""+VehID;
                      //  JOptionPane.showMessageDialog(null," about to compare :"+eVID+" and "+qVID);
                        if(eVID.equals(qVID)){
                            
                           // JOptionPane.showMessageDialog(null," veh ids are same");
                            if((sTime>qetime && sDate.compareTo(qedate)==0)||(qstime<sTime && eDate.compareTo(qsdate)==0)){
                            
                            canRentThis=true;
                        }else{
                           canRentThis=false;
                        }
                        }else{
                          //  JOptionPane.showMessageDialog(null," veh ids are different");
                            canRentThis=true;
                        }
                        
                        
                        
                        }
                        
                        
                        
                    }else{
                      canRentThis=true;
                     // JOptionPane.showMessageDialog(null,"no returns for rs");
                    }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"failed to execute query for VID, debug at query or check while , vehID: "+VehID);
            JOptionPane.showMessageDialog(null," error: "+e);
        }
        
        return(canRentThis);
    }
    private String[] CalcEndDateAndTime(int dd, int mm , int yyyy , int startTime , int duration){
        
        int edd=0;
        int emm=0;
        int eyyyy=0;
        int eTime;
        
        if(startTime+duration>23){
            
            eTime=(startTime+duration)-24;
            
            if(dd==28&&(mm!=2)){
            edd=dd+1;
            if(mm==12){
               emm=mm+1;
               eyyyy=yyyy+1;
            }
            
            }
            else if(dd==30&&((mm==2)||(mm==4)||(mm==6)||(mm==9)||(mm==11))){
            edd=dd+1;
            if(mm==12){
               emm=mm+1;
               eyyyy=yyyy+1;
            }
            
            }
            else if(dd==31&&((mm==1)||(mm==3)||(mm==5)||(mm==7)||(mm==8)||(mm==10)||(mm==12))){
            edd=dd+1;
            if(mm==12){
               emm=mm+1;
               eyyyy=yyyy+1;
            }
           
            }
            else{
                edd=dd+1;
                emm=mm;
                eyyyy=yyyy;
            }
            
            
            
        }else{
            eTime=startTime+duration;
            edd=dd;
            emm=mm;
            eyyyy=yyyy;
        }
        
        String EndDate;
        String EndTime=""+eTime;
        
        if(edd<10){
            if(emm<10){
                EndDate=eyyyy+"-0"+emm+"-0"+edd;
            }else{
                EndDate=eyyyy+"-"+emm+"-0"+edd;
            }
        }else{
             if(emm<10){
                EndDate=eyyyy+"-0"+emm+"-"+edd;
            }else{
                EndDate=eyyyy+"-"+emm+"-"+edd;
            }
        }
        
        String[] res=new String[2];
        res[0]=EndDate;
        res[1]=""+eTime;
        
        return(res);
    }
    
    private String[] getVIDforModel(String vehModel){
        
        String[] retRes={"0"}; 
        int counter=0;
        try{
            
            Class.forName("com.mysql.jdbc.Driver");  
		Connection con=DriverManager.getConnection(  
		"jdbc:mysql://localhost:3306/vrsdb","root",""); 
                
                Statement stmt=con.createStatement();
                String sql="select * from vehicle where vehmodel='"+vehModel+"'";
                
                ResultSet rs=stmt.executeQuery(sql);
                
                while(rs.next()){
                    
                    String temp = rs.getString(1);
                    retRes[counter]=temp;
                }
                
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error when getting vehicle ids for getVIDforModel method");
        }
       return(retRes); 
    }
    
    private void SetStateToBook(){
        bookavehicleTab.setVisible(true);
        browseFleetTab.setVisible(false);
        yourBookingsTab.setVisible(false);
        manageAccountTab.setVisible(false);
        
    }
    private void SetStateToBrowse(){
        bookavehicleTab.setVisible(false);
        browseFleetTab.setVisible(true);
        yourBookingsTab.setVisible(false);
        manageAccountTab.setVisible(false);
    }
    private void SetStateToHistory(){
        bookavehicleTab.setVisible(false);
        browseFleetTab.setVisible(false);
        yourBookingsTab.setVisible(true);
        manageAccountTab.setVisible(false);
    }
    private void SetStateToManage(){
        bookavehicleTab.setVisible(false);
        browseFleetTab.setVisible(false);
        yourBookingsTab.setVisible(false);
        manageAccountTab.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTF;
    private javax.swing.JPanel bookavehicleTab;
    private javax.swing.JLabel browseFleetLabel;
    private javax.swing.JLabel browseFleetLabel1;
    private javax.swing.JPanel browseFleetTab;
    private javax.swing.JButton checkButton;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JLabel currentAddressLab;
    private javax.swing.JLabel currentMailLab;
    private javax.swing.JLabel currentNameLab;
    private javax.swing.JLabel currentphone;
    private javax.swing.JComboBox<String> ddc;
    private javax.swing.JSlider durationSlider;
    private javax.swing.JTextField emailTF;
    private javax.swing.JTable historyTable;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLayeredPane layerdPane;
    private javax.swing.JComboBox<String> locc;
    private javax.swing.JLabel manageAccountLabel;
    private javax.swing.JPanel manageAccountTab;
    private javax.swing.JMenuBar menubar1;
    private javax.swing.JComboBox<String> mmc;
    private javax.swing.JTextField nutTF;
    private javax.swing.JMenuItem op1;
    private javax.swing.JPanel options;
    private javax.swing.JTextField phoneTF;
    private javax.swing.JLabel rentLabel;
    private javax.swing.JMenu settingsOP;
    private javax.swing.JSlider startTimeSlider;
    private javax.swing.JLabel vehCostLab;
    private javax.swing.JLabel vehLocsLab;
    private javax.swing.JLabel vehNameLab;
    private javax.swing.JComboBox<String> vehSelect;
    private javax.swing.JLabel vehTypeLab;
    private javax.swing.JPanel yourBookingsTab;
    private javax.swing.JComboBox<String> yyyyc;
    // End of variables declaration//GEN-END:variables
}
